/**
 * Generated by veryExpress@0.5.25 
 * https://github.com/Justin26l/VeryExpress
 */

import { Request, Response, NextFunction } from "express";
import * as roles from "../_roles";
import utils from "../_utils";
import log from "../_utils/logger.gen";

export { roles };

export default class RoleBaseAccessControl {
    private collection: string;
    private actions: {[key:string]: string} = {
        "GET": 'read',
        "POST /": 'create',
        "POST /search": 'search',
        "PUT": 'update',
        "PATCH": 'update',
        "DELETE": 'delete',
    };

    constructor(
        collection: string, 
    ) {
        this.collection = collection;
    }

    public middleware = (req: Request, res: Response, next: NextFunction) => {
        try { 
            log.info("RBAC.middleware", req.method, req.path, req.user);
            if ( !req.user ) {
                throw 401;
            }

            const user :any = req.user;
            const actionKey = req.method !== "POST" ? req.method : `${req.method} ${req.path}`;
            
            if ( user.roles.includes('user') && new roles.user().checkAccess(this.collection, this.actions[actionKey]) ) {
                next();
            }else{
                throw 403;
            }
        }
        catch (e: any) {
            log.errorNoExit(e);
            if (typeof e === 'number') {
                utils.response.send(res, e);
            }
            else {
                utils.response.send(res, 500, { message: e.errorMessages });
            }
        }
    }
}