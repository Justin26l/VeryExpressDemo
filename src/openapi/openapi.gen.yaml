openapi: 3.0.0
info:
  title: veryExpress generated api server
  description: OpenApi Spec generated by veryExpress
  version: 1.0.0
paths:
  /api/session:
    x-documentName: Session
  /api/session/{id}:
    x-documentName: Session
  /api/user:
    x-documentName: User
    get:
      operationId: getListUser
      tags:
        - user
      parameters:
        - name: _id
          in: query
          required: false
          schema:
            type: string
            x-format: ObjectId
        - name: authProfiles
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
            format: email
        - name: name
          in: query
          required: false
          schema:
            type: string
            maxLength: 64
        - name: active
          in: query
          required: false
          schema:
            type: boolean
        - name: locale
          in: query
          required: false
          schema:
            type: string
            maxLength: 8
        - name: roles
          in: query
          required: false
          schema:
            type: string
        - name: profileErrors
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    post:
      operationId: postUser
      tags:
        - user
      parameters: []
      requestBody:
        description: post User
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postUserBody'
      responses:
        '201':
          description: Crerated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
  /api/user/{id}:
    x-documentName: User
    get:
      operationId: getUser
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            x-format: ObjectId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
    patch:
      operationId: patchUser
      tags:
        - user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            x-format: ObjectId
      requestBody:
        description: patch User
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patchUserResponse'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '413':
          description: Payload Too Large
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
components:
  securitySchemes: {}
  schemas:
    getUserResponse:
      type: object
      properties:
        _id:
          type: string
        authProfiles:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              authId:
                type: string
              username:
                type: string
        email:
          type: string
          format: email
        name:
          type: string
          maxLength: 64
        active:
          type: boolean
          default: true
        locale:
          type: string
          maxLength: 8
        roles:
          type: array
          items:
            type: string
            enum:
              - user
          default:
            - user
        profileErrors:
          type: array
          items:
            type: string
    getUserResponseList:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          authProfiles:
            type: array
            items:
              type: object
              properties:
                provider:
                  type: string
                authId:
                  type: string
                username:
                  type: string
          email:
            type: string
            format: email
          name:
            type: string
            maxLength: 64
          active:
            type: boolean
            default: true
          locale:
            type: string
            maxLength: 8
          roles:
            type: array
            items:
              type: string
              enum:
                - user
            default:
              - user
          profileErrors:
            type: array
            items:
              type: string
    postUserBody:
      type: object
      properties:
        authProfiles:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              authId:
                type: string
              username:
                type: string
            required: []
        email:
          type: string
          format: email
        name:
          type: string
          maxLength: 64
        active:
          type: boolean
          default: true
        locale:
          type: string
          maxLength: 8
        roles:
          type: array
          items:
            type: string
            enum:
              - user
          default:
            - user
        profileErrors:
          type: array
          items:
            type: string
      required:
        - name
        - active
    postUserResponse:
      type: object
      properties:
        _id:
          type: string
        authProfiles:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              authId:
                type: string
              username:
                type: string
        email:
          type: string
          format: email
        name:
          type: string
          maxLength: 64
        active:
          type: boolean
          default: true
        locale:
          type: string
          maxLength: 8
        roles:
          type: array
          items:
            type: string
            enum:
              - user
          default:
            - user
        profileErrors:
          type: array
          items:
            type: string
    patchUserBody:
      type: object
      properties:
        authProfiles:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              authId:
                type: string
              username:
                type: string
        email:
          type: string
          format: email
        name:
          type: string
          maxLength: 64
        active:
          type: boolean
          default: true
        locale:
          type: string
          maxLength: 8
        roles:
          type: array
          items:
            type: string
            enum:
              - user
          default:
            - user
        profileErrors:
          type: array
          items:
            type: string
    patchUserResponse:
      type: object
      properties:
        _id:
          type: string
        authProfiles:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              authId:
                type: string
              username:
                type: string
        email:
          type: string
          format: email
        name:
          type: string
          maxLength: 64
        active:
          type: boolean
          default: true
        locale:
          type: string
          maxLength: 8
        roles:
          type: array
          items:
            type: string
            enum:
              - user
          default:
            - user
        profileErrors:
          type: array
          items:
            type: string
